[metadata]
license_file = LICENSE

[bdist_wheel]
universal = 1

[options]
packages = find:
python_requires = >=3.8

[options.packages.find]
where = src
include = icp_analyzer*
exclude = 
    tests*
    docs*
    examples*
    scripts*

[options.extras_require]
dev =
    pytest>=6.0
    pytest-cov>=4.1.0
    pytest-asyncio>=0.23.5
    black>=23.7.0
    flake8>=6.1.0
    mypy>=1.5.1
    isort>=5.12.0
    tox>=4.5.0
    pre-commit>=3.3.3
    commitizen>=3.7.0
    bandit>=1.7.5
    pyupgrade>=3.3.1

[options.entry_points]
console_scripts =
    icp-analyzer = app:main

[flake8]
max-line-length = 88
extend-ignore = E203
exclude = .git,__pycache__,build,dist,*.egg-info

[mypy]
python_version = 3.8
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true

[isort]
profile = black
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "DJANGO", "FIRSTPARTY", "LOCALFOLDER"]
known_first_party = ["src"]
known_django = ["django"]
skip = [".git", "venv", "env", ".env", "build", "dist"]

[tool:pytest]
minversion = 6.0
addopts = -ra -q
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
filterwarnings =
    ignore::DeprecationWarning
    ignore::UserWarning

[coverage:run]
branch = true
source = src

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError
ignore_errors = true
omit =
    tests/*
    setup.py
    */__init__.py 